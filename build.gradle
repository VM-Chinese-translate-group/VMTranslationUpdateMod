plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "io.github.pacifistmc.forgix" version "1.+"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.mod_version}+mc${rootProject.minecraft_version}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

forgix {
    group = rootProject.maven_group
    mergedJarName = "${rootProject.archives_base_name}-${rootProject.version}.jar"
    outputDir = "build/libs/forgix"

    forge {
        projectName = "forge"
        jarLocation = "build/libs/${rootProject.archives_base_name}-forge-${rootProject.version}.jar"
    }

    fabric {
        projectName = "fabric"
        jarLocation = "build/libs/${rootProject.archives_base_name}-fabric-${rootProject.version}.jar"
    }

    custom {
        projectName = "neoforge"
        jarLocation = "build/libs/${rootProject.archives_base_name}-neoforge-${ rootProject.version }.jar"
    }
}

unifiedPublishing {
    project {
        displayName = "$rootProject.version"
        releaseType = "release"
        changelog = file("CHANGELOG.md").getText('UTF-8')
        gameVersions = ["1.20.3", "1.20.4"]
        gameLoaders = ["fabric", "forge", "neoforge"]

        mainPublication = file("build/libs/forgix/${rootProject.archives_base_name}-${rootProject.version}.jar")

        relations {
            depends {
                curseforge = "cloth-config"
                modrinth = "cloth-config"
            }
        }

        var CURSEFORGE_TOKEN = project.findProperty("CURSEFORGE_TOKEN") ?: System.getenv("CURSEFORGE_TOKEN")
        if (CURSEFORGE_TOKEN != null) {
            curseforge {
                token = CURSEFORGE_TOKEN
                id = rootProject.curseforge_id
            }
        }

        var MODRINTH_TOKEN = project.findProperty("MODRINTH_TOKEN") ?: System.getenv("MODRINTH_TOKEN")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = rootProject.modrinth_id
                version = "$rootProject.version"
            }
        }
    }
}
